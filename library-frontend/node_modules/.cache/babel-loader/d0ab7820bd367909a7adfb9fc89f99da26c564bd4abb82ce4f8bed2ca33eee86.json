{"ast":null,"code":"import React,{useState}from'react';import axiosConfig from'./axiosConfig';import{Link,useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const navigate=useNavigate();const handleLogin=async e=>{e.preventDefault();try{const response=await axiosConfig.post('/api/users/login',{username,password});// store the token \nlocalStorage.setItem('token',response.data.token);// Redirect to the home page\nnavigate('/');}catch(error){console.error('Login failed:',error);setError('Invalid username or password');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error})]}),/*#__PURE__*/_jsxs(\"p\",{style:{marginTop:'20px'},children:[\"Don't have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/signup\",style:{color:'#007BFF',textDecoration:'underline'},children:\"Sign up\"})]})]});};export default Login;","map":{"version":3,"names":["React","useState","axiosConfig","Link","useNavigate","jsx","_jsx","jsxs","_jsxs","Login","username","setUsername","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","response","post","localStorage","setItem","data","token","console","children","onSubmit","type","value","onChange","target","required","style","color","marginTop","to","textDecoration"],"sources":["/Users/richarddrum/TroyWebTechnicalAssessment/Library/library-frontend/src/components/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axiosConfig from './axiosConfig';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst Login: React.FC = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const navigate = useNavigate();\n\n    const handleLogin = async (e: React.FormEvent) => {\n        e.preventDefault();\n        try {\n            const response = await axiosConfig.post('/api/users/login', { username, password });\n            // store the token \n            localStorage.setItem('token', response.data.token);\n            // Redirect to the home page\n            navigate('/');\n        } catch (error) {\n            console.error('Login failed:', error);\n            setError('Invalid username or password');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Login</h2>\n            <form onSubmit={handleLogin}>\n                <div>\n                    <label>Username:</label>\n                    <input\n                        type=\"text\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label>Password:</label>\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n                </div>\n                <button type=\"submit\">Login</button>\n                {error && <p style={{ color: 'red' }}>{error}</p>}\n            </form>\n            <p style={{ marginTop: '20px' }}>\n                Don't have an account? <Link to=\"/signup\" style={{ color: '#007BFF', textDecoration: 'underline' }}>Sign up</Link>\n            </p>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,OAASC,IAAI,CAAEC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErD,KAAM,CAAAC,KAAe,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAe,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAa,WAAW,CAAG,KAAO,CAAAC,CAAkB,EAAK,CAC9CA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAlB,WAAW,CAACmB,IAAI,CAAC,kBAAkB,CAAE,CAAEX,QAAQ,CAAEE,QAAS,CAAC,CAAC,CACnF;AACAU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC,CAClD;AACAT,QAAQ,CAAC,GAAG,CAAC,CACjB,CAAE,MAAOF,KAAK,CAAE,CACZY,OAAO,CAACZ,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrCC,QAAQ,CAAC,8BAA8B,CAAC,CAC5C,CACJ,CAAC,CAED,mBACIP,KAAA,QAAAmB,QAAA,eACIrB,IAAA,OAAAqB,QAAA,CAAI,OAAK,CAAI,CAAC,cACdnB,KAAA,SAAMoB,QAAQ,CAAEX,WAAY,CAAAU,QAAA,eACxBnB,KAAA,QAAAmB,QAAA,eACIrB,IAAA,UAAAqB,QAAA,CAAO,WAAS,CAAO,CAAC,cACxBrB,IAAA,UACIuB,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEpB,QAAS,CAChBqB,QAAQ,CAAGb,CAAC,EAAKP,WAAW,CAACO,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE,CAC7CG,QAAQ,MACX,CAAC,EACD,CAAC,cACNzB,KAAA,QAAAmB,QAAA,eACIrB,IAAA,UAAAqB,QAAA,CAAO,WAAS,CAAO,CAAC,cACxBrB,IAAA,UACIuB,IAAI,CAAC,UAAU,CACfC,KAAK,CAAElB,QAAS,CAChBmB,QAAQ,CAAGb,CAAC,EAAKL,WAAW,CAACK,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE,CAC7CG,QAAQ,MACX,CAAC,EACD,CAAC,cACN3B,IAAA,WAAQuB,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,OAAK,CAAQ,CAAC,CACnCb,KAAK,eAAIR,IAAA,MAAG4B,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAR,QAAA,CAAEb,KAAK,CAAI,CAAC,EAC/C,CAAC,cACPN,KAAA,MAAG0B,KAAK,CAAE,CAAEE,SAAS,CAAE,MAAO,CAAE,CAAAT,QAAA,EAAC,yBACN,cAAArB,IAAA,CAACH,IAAI,EAACkC,EAAE,CAAC,SAAS,CAACH,KAAK,CAAE,CAAEC,KAAK,CAAE,SAAS,CAAEG,cAAc,CAAE,WAAY,CAAE,CAAAX,QAAA,CAAC,SAAO,CAAM,CAAC,EACnH,CAAC,EACH,CAAC,CAEd,CAAC,CAED,cAAe,CAAAlB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}