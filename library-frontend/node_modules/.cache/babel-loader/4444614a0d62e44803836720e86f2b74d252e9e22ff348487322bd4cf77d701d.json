{"ast":null,"code":"// src/SignUp.tsx\nimport React,{useState}from'react';import axiosConfig from'../utilities/axiosConfig';import{useNavigate}from'react-router-dom';import'../styles/styles.css';// Import your centralized CSS\nimport{login}from'./authService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SignUp=()=>{const[username,setUsername]=useState('');const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[userType,setUserType]=useState('Customer');// Default to Customer\nconst[errorMessages,setErrorMessages]=useState([]);const[success,setSuccess]=useState('');const navigate=useNavigate();const handleSignUp=async e=>{e.preventDefault();setErrorMessages([]);// Reset error messages before making the request\nsetSuccess('');try{await axiosConfig.post('/api/users/register',{username,email,password,userType// Include userType in the registration request\n});setSuccess('User registered successfully!');// Automatically log in the user after registration\nawait login(username,password,navigate);}catch(error){// Check if the response contains error messages\nif(error.response&&error.response.data.errors){setErrorMessages(error.response.data.errors);// Set specific error messages\n}else{setErrorMessages(['Registration failed. Please try again.']);}}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Sign Up\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSignUp,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"User Type:\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:\"customer\",name:\"userType\",value:\"Customer\",checked:userType==='Customer',onChange:e=>setUserType(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"customer\",children:\"Customer\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:\"librarian\",name:\"userType\",value:\"Librarian\",checked:userType==='Librarian',onChange:e=>setUserType(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"librarian\",children:\"Librarian\"})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Sign Up\"}),errorMessages.length>0&&/*#__PURE__*/_jsx(\"div\",{style:{color:'red'},children:errorMessages.map((msg,index)=>/*#__PURE__*/_jsx(\"p\",{children:msg},index))}),success&&/*#__PURE__*/_jsx(\"p\",{style:{color:'green'},children:success})]}),/*#__PURE__*/_jsx(\"p\",{className:\"link\",children:/*#__PURE__*/_jsx(\"span\",{onClick:()=>navigate('/login'),style:{cursor:'pointer'},children:\"Already have an account? Login\"})})]});};export default SignUp;","map":{"version":3,"names":["React","useState","axiosConfig","useNavigate","login","jsx","_jsx","jsxs","_jsxs","SignUp","username","setUsername","email","setEmail","password","setPassword","userType","setUserType","errorMessages","setErrorMessages","success","setSuccess","navigate","handleSignUp","e","preventDefault","post","error","response","data","errors","children","onSubmit","type","value","onChange","target","required","id","name","checked","htmlFor","length","style","color","map","msg","index","className","onClick","cursor"],"sources":["/Users/richarddrum/TroyWebTechnicalAssessment/Git/Library/library-frontend/src/components/SignUp.tsx"],"sourcesContent":["// src/SignUp.tsx\nimport React, { useState } from 'react';\nimport axiosConfig from '../utilities/axiosConfig';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/styles.css'; // Import your centralized CSS\nimport { login } from './authService';\n\nconst SignUp: React.FC = () => {\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [userType, setUserType] = useState('Customer'); // Default to Customer\n    const [errorMessages, setErrorMessages] = useState<string[]>([]);\n    const [success, setSuccess] = useState('');\n    const navigate = useNavigate();\n\n    const handleSignUp = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setErrorMessages([]); // Reset error messages before making the request\n        setSuccess('');\n\n        try {\n            await axiosConfig.post('/api/users/register', { \n                username, \n                email, \n                password,\n                userType  // Include userType in the registration request\n            });\n            setSuccess('User registered successfully!');\n            // Automatically log in the user after registration\n            await login(username, password, navigate);\n        } catch (error: any) {\n            // Check if the response contains error messages\n            if (error.response && error.response.data.errors) {\n                setErrorMessages(error.response.data.errors); // Set specific error messages\n            } else {\n                setErrorMessages(['Registration failed. Please try again.']);\n            }\n        }\n    };\n\n    return (\n        <div>\n            <h2>Sign Up</h2>\n            <form onSubmit={handleSignUp}>\n                <div>\n                    <label>Username:</label>\n                    <input\n                        type=\"text\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label>Email:</label>\n                    <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label>Password:</label>\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label>User Type:</label>\n                    <div>\n                        <input\n                            type=\"radio\"\n                            id=\"customer\"\n                            name=\"userType\"\n                            value=\"Customer\"\n                            checked={userType === 'Customer'}\n                            onChange={(e) => setUserType(e.target.value)}\n                        />\n                        <label htmlFor=\"customer\">Customer</label>\n                    </div>\n                    <div>\n                        <input\n                            type=\"radio\"\n                            id=\"librarian\"\n                            name=\"userType\"\n                            value=\"Librarian\"\n                            checked={userType === 'Librarian'}\n                            onChange={(e) => setUserType(e.target.value)}\n                        />\n                        <label htmlFor=\"librarian\">Librarian</label>\n                    </div>\n                </div>\n                <button type=\"submit\">Sign Up</button>\n                {errorMessages.length > 0 && (\n                    <div style={{ color: 'red' }}>\n                        {errorMessages.map((msg, index) => (\n                            <p key={index}>{msg}</p>\n                        ))}\n                    </div>\n                )}\n                {success && <p style={{ color: 'green' }}>{success}</p>}\n            </form>\n            <p className=\"link\">\n                <span onClick={() => navigate('/login')} style={{ cursor: 'pointer' }}>Already have an account? Login</span>\n            </p>\n        </div>\n    );\n};\n\nexport default SignUp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}