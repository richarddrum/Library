{"ast":null,"code":"import { jwtDecode } from \"jwt-decode\";\nexport const isTokenValid = token => {\n  if (!token) return false;\n  try {\n    const decoded = jwtDecode(token); // Decode the JWT\n    const currentTime = Date.now() / 1000; // Current time in seconds TODO fix\n    return decoded.exp > currentTime; // Check if the token is expired\n  } catch (error) {\n    console.error(\"Token validation error:\", error);\n    return false;\n  }\n};","map":{"version":3,"names":["jwtDecode","isTokenValid","token","decoded","currentTime","Date","now","exp","error","console"],"sources":["/Users/richarddrum/TroyWebTechnicalAssessment/Library/library-frontend/src/utilities/AuthenticationUtils.ts"],"sourcesContent":["import { jwtDecode } from \"jwt-decode\";\n\nexport const isTokenValid = (token: string | null) => {\n    if (!token) return false;\n\n    try {\n        const decoded: any = jwtDecode(token); // Decode the JWT\n        const currentTime = Date.now() / 1000; // Current time in seconds TODO fix\n        return decoded.exp > currentTime; // Check if the token is expired\n    } catch (error) {\n        console.error(\"Token validation error:\", error);\n        return false;\n    }\n};"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,YAAY,GAAIC,KAAoB,IAAK;EAClD,IAAI,CAACA,KAAK,EAAE,OAAO,KAAK;EAExB,IAAI;IACA,MAAMC,OAAY,GAAGH,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC;IACvC,MAAME,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACvC,OAAOH,OAAO,CAACI,GAAG,GAAGH,WAAW,CAAC,CAAC;EACtC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,KAAK;EAChB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}