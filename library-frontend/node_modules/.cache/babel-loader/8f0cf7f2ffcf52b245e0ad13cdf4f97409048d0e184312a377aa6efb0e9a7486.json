{"ast":null,"code":"import axiosConfig from '../utilities/axiosConfig';\nexport const login = async (username, password, navigate) => {\n  try {\n    const response = await axiosConfig.post('/api/users/login', {\n      username,\n      password\n    });\n    // Store the token \n    localStorage.setItem('token', response.data.token);\n    // Redirect to the home page\n    navigate('/');\n  } catch (error) {\n    console.error('Login failed:', error);\n    throw new Error('Login failed. Please try again.');\n  }\n};","map":{"version":3,"names":["axiosConfig","login","username","password","navigate","response","post","localStorage","setItem","data","token","error","console","Error"],"sources":["/Users/richarddrum/TroyWebTechnicalAssessment/Git/Library/library-frontend/src/components/authService.tsx"],"sourcesContent":["import axiosConfig from '../utilities/axiosConfig';\n\nexport const login = async (username: string, password: string, navigate: any) => {\n    try {\n        const response = await axiosConfig.post('/api/users/login', { username, password });\n        // Store the token \n        localStorage.setItem('token', response.data.token);\n        // Redirect to the home page\n        navigate('/');\n    } catch (error) {\n        console.error('Login failed:', error);\n        throw new Error('Login failed. Please try again.');\n    }\n};"],"mappings":"AAAA,OAAOA,WAAW,MAAM,0BAA0B;AAElD,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,EAAEC,QAAa,KAAK;EAC9E,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,WAAW,CAACM,IAAI,CAAC,kBAAkB,EAAE;MAAEJ,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACnF;IACAI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;IAClD;IACAN,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,MAAM,IAAIE,KAAK,CAAC,iCAAiC,CAAC;EACtD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}