{"ast":null,"code":"import{jwtDecode}from\"jwt-decode\";export const isTokenValid=token=>{if(!token)return false;try{const decoded=jwtDecode(token);// Decode the JWT\nconst currentTime=Date.now()/1000;// Current time in seconds TODO fix\nreturn decoded.exp>currentTime;// Check if the token is expired\n}catch(error){console.error(\"Token validation error:\",error);return false;}};","map":{"version":3,"names":["jwtDecode","isTokenValid","token","decoded","currentTime","Date","now","exp","error","console"],"sources":["/Users/richarddrum/TroyWebTechnicalAssessment/Git/Library/library-frontend/src/utilities/AuthenticationUtils.ts"],"sourcesContent":["import { jwtDecode } from \"jwt-decode\";\n\nexport const isTokenValid = (token: string | null) => {\n    if (!token) return false;\n\n    try {\n        const decoded: any = jwtDecode(token); // Decode the JWT\n        const currentTime = Date.now() / 1000; // Current time in seconds TODO fix\n        return decoded.exp > currentTime; // Check if the token is expired\n    } catch (error) {\n        console.error(\"Token validation error:\", error);\n        return false;\n    }\n};"],"mappings":"AAAA,OAASA,SAAS,KAAQ,YAAY,CAEtC,MAAO,MAAM,CAAAC,YAAY,CAAIC,KAAoB,EAAK,CAClD,GAAI,CAACA,KAAK,CAAE,MAAO,MAAK,CAExB,GAAI,CACA,KAAM,CAAAC,OAAY,CAAGH,SAAS,CAACE,KAAK,CAAC,CAAE;AACvC,KAAM,CAAAE,WAAW,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,IAAI,CAAE;AACvC,MAAO,CAAAH,OAAO,CAACI,GAAG,CAAGH,WAAW,CAAE;AACtC,CAAE,MAAOI,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C,MAAO,MAAK,CAChB,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}