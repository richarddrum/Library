{"ast":null,"code":"import axiosConfig from'./axiosConfig';export const login=async(username,password,navigate)=>{try{const response=await axiosConfig.post('/api/users/login',{username,password});// Store the token \nlocalStorage.setItem('token',response.data.token);// Redirect to the home page\nnavigate('/');}catch(error){console.error('Login failed:',error);throw new Error('Login failed. Please try again.');}};","map":{"version":3,"names":["axiosConfig","login","username","password","navigate","response","post","localStorage","setItem","data","token","error","console","Error"],"sources":["/Users/richarddrum/TroyWebTechnicalAssessment/Library/library-frontend/src/components/authService.tsx"],"sourcesContent":["import axiosConfig from './axiosConfig';\n\nexport const login = async (username: string, password: string, navigate: any) => {\n    try {\n        const response = await axiosConfig.post('/api/users/login', { username, password });\n        // Store the token \n        localStorage.setItem('token', response.data.token);\n        // Redirect to the home page\n        navigate('/');\n    } catch (error) {\n        console.error('Login failed:', error);\n        throw new Error('Login failed. Please try again.');\n    }\n};"],"mappings":"AAAA,MAAO,CAAAA,WAAW,KAAM,eAAe,CAEvC,MAAO,MAAM,CAAAC,KAAK,CAAG,KAAAA,CAAOC,QAAgB,CAAEC,QAAgB,CAAEC,QAAa,GAAK,CAC9E,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,WAAW,CAACM,IAAI,CAAC,kBAAkB,CAAE,CAAEJ,QAAQ,CAAEC,QAAS,CAAC,CAAC,CACnF;AACAI,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC,CAClD;AACAN,QAAQ,CAAC,GAAG,CAAC,CACjB,CAAE,MAAOO,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrC,KAAM,IAAI,CAAAE,KAAK,CAAC,iCAAiC,CAAC,CACtD,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}